version: "3.8"

services:
  frontend:
    build: ./frontend  # ✅ Use correct frontend path
    container_name: project-management-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      api:
        condition: service_healthy  # ✅ Ensure API is ready before frontend starts
    env_file:
      - .env
    networks:
      - project_network
    restart: unless-stopped
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf  # ✅ Ensure NGINX uses custom config

  api:
    build: ./api
    container_name: project-management-api
    ports:
      - "${API_PORT}:5000"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy  # ✅ Ensure Database is ready before API starts
    networks:
      - project_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      DATABASE_URL: mysql+pymysql://${DATABASE_USER}:${DATABASE_PASSWORD}@database/${DATABASE_NAME}

  database:
    image: mysql:8.0
    container_name: project-management-db
    restart: always
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - mysql_data:/var/lib/mysql  # ✅ Ensure MySQL data persists
      - ./database/my.cnf:/etc/mysql/my.cnf
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DATABASE_USER}", "-p${DATABASE_PASSWORD}"]
      interval: 10s
      retries: 5
      start_period: 20s
    networks:
      - project_network

networks:
  project_network:
    driver: bridge

volumes:
  mysql_data:  # ✅ Ensures MySQL data is persistent

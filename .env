# ===========================
# üî• FLASK CONFIGURATION
# ===========================
FLASK_APP=run.py  # Main Flask app entry point
#FLASK_ENV=production  # Change to 'development' for local testing
FLASK_DEBUG=0 
API_PORT=5000  # Port where the Flask API runs

# ===========================
# üîê SECURITY CONFIGURATION
# ===========================
# Generate secure values using the following Python script:
# import secrets
# print("SECRET_KEY=", secrets.token_hex(32))
# print("JWT_SECRET_KEY=", secrets.token_hex(32))
# print("PASSWORD_HASH_SALT=", secrets.token_hex(16))

SECRET_KEY= 3f7b9d88e5f6c39e2b8a4e5c1d7a3a6b5e9d1c8f4e2b3c7d6a1e4f5b2d9c0e7a
JWT_SECRET_KEY= 9a2b7d4e8c5f3b6a1e7d2c9f4e6b5a3d7c1e8f2b9a4d6c0e5f7b3a8d1c2e9f0
PASSWORD_HASH_SALT= a1b2c3d4e5f6g7h8


# ===========================
# üåê FRONTEND CONFIGURATION
# ===========================
FRONTEND_PORT=80  # Port where the frontend (Nginx) runs

#  ===========================
# üõ¢Ô∏è DATABASE CONFIGURATION
# ===========================
DATABASE_USER = app_user
DATABASE_PASSWORD = P@$$wOrd
DATABASE_HOST=db  # Database service name in Docker
DATABASE_PORT=3306  # MySQL default port
DATABASE_NAME=project_management  # Database name
DATABASE_PASSWORD=root  # Database password for application use

# ‚úÖ MySQL Root Password for Initialization (No MYSQL_USER=root)
MYSQL_ROOT_PASSWORD=root
MYSQL_DATABASE=project_management

#MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}  # Ensures MySQL starts correctly

# ‚úÖ Automatically inject EC2 Public IP
EC2_PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
CORS_ALLOWED_ORIGINS=http://${EC2_PUBLIC_IP}
FRONTEND_URL=http://${EC2_PUBLIC_IP}

# ===========================
# üîë AWS CONFIGURATION (For Terraform)
# ===========================
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_SSH_KEY_NAME=my-aws-key  # SSH key name in AWS

# ===========================
# üîß DOCKER CONFIGURATION
# ===========================
DOCKER_NETWORK=project_network  # Docker network name

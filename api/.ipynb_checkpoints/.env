# ===========================
# üî• FLASK CONFIGURATION
# ===========================
FLASK_APP=run.py  # Main Flask app entry point
FLASK_ENV=production  # Change to 'development' for local testing
API_PORT=5000  # Port where the Flask API runs

# ===========================
# üîê SECURITY CONFIGURATION
# ===========================
# Generate secure values using the following Python script:
# import secrets
# print("SECRET_KEY=", secrets.token_hex(32))
# print("JWT_SECRET_KEY=", secrets.token_hex(32))
# print("PASSWORD_HASH_SALT=", secrets.token_hex(16))

SECRET_KEY=your_generated_secret_key  # Paste generated value here
JWT_SECRET_KEY=your_generated_jwt_secret  # Paste generated value here
PASSWORD_HASH_SALT=your_generated_salt  # Paste generated value here

# ===========================
# üåê FRONTEND CONFIGURATION
# ===========================
FRONTEND_PORT=80  # Port where the frontend (Nginx) runs

# ===========================
# üõ¢Ô∏è DATABASE CONFIGURATION
# ===========================
DATABASE_HOST=db  # Database service name in Docker
DATABASE_PORT=3306  # MySQL default port
DATABASE_NAME=project_management  # Database name
DATABASE_USER=root  # Database username
DATABASE_PASSWORD=root  # Database password

CORS_ALLOWED_ORIGINS=http://<EC2_PUBLIC_IP>  # Allowed frontend domains

# ===========================
# üîë AWS CONFIGURATION (For Terraform)
# ===========================
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_SSH_KEY_NAME=my-aws-key  # SSH key name in AWS

# ===========================
# üîß DOCKER CONFIGURATION
# ===========================
DOCKER_NETWORK=project_network  # Docker network name
